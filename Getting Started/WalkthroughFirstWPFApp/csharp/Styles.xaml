<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExpenseIt9">

    <!-- Header text style -->
    <Style x:Key="HeaderTextStyle">
        <Setter Property="Label.VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Label.FontFamily" Value="Trebuchet MS"></Setter>
        <Setter Property="Label.FontWeight" Value="Bold"></Setter>
        <Setter Property="Label.FontSize" Value="18"></Setter>
        <Setter Property="Label.Foreground" Value="#183862"></Setter>
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Label.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Label.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Label style -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- List header style -->
    <Style x:Key="ListHeaderStyle" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#3274CD" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Label.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid header style -->
    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#3274CD" />
        <Setter Property="BorderBrush" Value="#3274CD" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
            <!-- 
                When in high contrast modes, follow system colors to present proper contrast between adjacent colors.
                Also add a border here to differentiate the header from the actual data as we no longer have a 
                disparate color.
            -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- List header text style -->
    <Style x:Key="ListHeaderTextStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Button style -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="125" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
 
</ResourceDictionary>